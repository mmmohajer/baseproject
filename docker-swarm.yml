version: "3.8"

services:
  nginx:
    image: mmmohajer70/baseproject-nginx:1.0.0
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static-data:/vol/static
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/htpasswd:/etc/nginx/.htpasswd
    networks:
      - mynetwork
    deploy:
      restart_policy:
        condition: on-failure

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - mynetwork
    deploy:
      restart_policy:
        condition: on-failure

  client:
    image: mmmohajer70/baseproject-client:1.0.0
    command: npm start
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - mynetwork
    deploy:
      restart_policy:
        condition: on-failure

  api:
    image: mmmohajer70/baseproject-api:1.0.0
    env_file:
      - ./config/envFiles/django/prod/.env
    command: ./docker-entrypoint-prod.sh
    volumes:
      - static-data:/usr/src/app/vol
    networks:
      - mynetwork
    deploy:
      restart_policy:
        condition: on-failure

  celery:
    image: mmmohajer70/baseproject-api:1.0.0
    env_file:
      - ./config/envFiles/django/prod/.env
    volumes:
      - static-data:/usr/src/app/vol
    command: celery -A config worker -l info
    networks:
      - mynetwork
    deploy:
      restart_policy:
        condition: on-failure

  celery-beat:
    image: mmmohajer70/baseproject-api:1.0.0
    env_file:
      - ./config/envFiles/django/prod/.env
    volumes:
      - static-data:/usr/src/app/vol
    command: celery -A config beat -l info
    networks:
      - mynetwork
    deploy:
      restart_policy:
        condition: on-failure

  celery-flower:
    image: mmmohajer70/baseproject-api:1.0.0
    env_file:
      - ./config/envFiles/django/prod/.env
    volumes:
      - static-data:/usr/src/app/vol
    command: celery -A config flower --url_prefix=/flower --basic_auth=${CELERY_FLOWER_USER}:${CELERY_FLOWER_PASSWORD}
    networks:
      - mynetwork
    deploy:
      restart_policy:
        condition: on-failure

  channels:
    image: mmmohajer70/baseproject-api:1.0.0
    env_file:
      - ./config/envFiles/django/prod/.env
    command: daphne -b 0.0.0.0 -p 8001 config.asgi:application
    networks:
      - mynetwork
    deploy:
      restart_policy:
        condition: on-failure

  db:
    image: postgres:13-alpine
    env_file:
      - ./config/envFiles/postgres/prod/.env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db_backups:/db_backups
    networks:
      - mynetwork
    deploy:
      restart_policy:
        condition: on-failure

  redis:
    image: redis:7.0.4-alpine3.16
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - mynetwork
    deploy:
      restart_policy:
        condition: on-failure

networks:
  mynetwork:
    driver: overlay

volumes:
  pgdata:
  static-data:
